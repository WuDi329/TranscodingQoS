//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import public "google/protobuf/timestamp.proto";

// option java_multiple_files = true;
// option java_package = "io.grpc.examples.helloworld";
// option java_outer_classname = "HelloWorldProto";
// option objc_class_prefix = "HLW";

package transcode;

// The greeting service definition.
service Transcoder {
  // Sends a greeting
  rpc DispatchVoDTask (DispatchVoDRequest) returns (DispatchVoDReply) {}

  rpc FinishTask (FinishVoDRequest) returns (FinishVoDReply) {}

//   rpc SayHelloStreamReply (HelloRequest) returns (stream HelloReply) {}
}

enum VideoCodec {
  H264 = 0;
  H265 = 1;
  VP9 = 2;
  AV1 = 3;
};

enum AudioCodec {
  AAC = 0;
  NONE = 1;
};

enum Resolution {
  SD = 0;
  HD = 1;
  FHD = 2;
};

enum Bitrate {
  LOW = 0;
  MEDIUM = 1;
  HIGH = 2;
  ULTRA = 3;  
}

message VideoInfo {
    string vid = 1;
    string duration = 2;
    VideoCodec origincodec = 3;
    Resolution originresolution = 4;
    AudioCodec originaudiocodec = 5;
    string originframerate = 6;
    string originbitrate = 7;
}

enum TaskType {
  VOD = 0;
  LATENCY = 1;
  LIVE = 2;
};

message DispatchVoDRequest {
    string taskid = 1;
    VideoInfo videoinfo = 2;
    string originurl = 3;
    string outputurl = 4;
    VideoCodec outputcodec = 5;
    Resolution outputresolution = 6;
    AudioCodec outputaudiocodec = 7;
    string outputframerate = 8;
    Bitrate bitrate = 9;
    TaskType tasktype = 10;
    string uniqueid = 11;
}

message DispatchVoDReply {
  string taskid = 1;
}

message FinishVoDRequest {
  string taskid = 1;
  TaskResult result = 2;
}

message TaskResult {
  enum status {
    FINISHED = 0;
    FAILED = 1;
  };
  enum vqa {
    SSIM = 0;
    VMAF = 1;
  }
  string hash = 1;
  google.protobuf.Timestamp finishtime = 2;
  string error = 3;
}


message FinishVoDReply {
  string taskid = 1;
}